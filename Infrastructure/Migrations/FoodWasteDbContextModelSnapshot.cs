// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(FoodWasteDbContext))]
    partial class FoodWasteDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Core.Domain.Kantine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("locatie")
                        .HasColumnType("int");

                    b.Property<string>("naam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("stad")
                        .HasColumnType("int");

                    b.Property<bool>("warm")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Kantines");
                });

            modelBuilder.Entity("Core.Domain.Medewerker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("kantineId")
                        .HasColumnType("int");

                    b.Property<string>("naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("persooneelsNr")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("kantineId");

                    b.ToTable("Medewerkers");
                });

            modelBuilder.Entity("Core.Domain.Pakket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("gereserveerdId")
                        .HasColumnType("int");

                    b.Property<int>("kantineId")
                        .HasColumnType("int");

                    b.Property<int>("maaltijd")
                        .HasColumnType("int");

                    b.Property<DateTime>("pickUpMax")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("pickup")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("prijs")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("stad")
                        .HasColumnType("int");

                    b.Property<string>("titel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("volwassen")
                        .HasColumnType("bit");

                    b.Property<bool>("warm")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("gereserveerdId");

                    b.HasIndex("kantineId");

                    b.ToTable("Pakketten");
                });

            modelBuilder.Entity("Core.Domain.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("alcohol")
                        .HasColumnType("bit");

                    b.Property<string>("foto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Producten");
                });

            modelBuilder.Entity("Core.Domain.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("geboortedatum")
                        .HasColumnType("datetime2");

                    b.Property<string>("naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("stad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("studentnummer")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("PakketProduct", b =>
                {
                    b.Property<int>("pakkettenId")
                        .HasColumnType("int");

                    b.Property<int>("productenId")
                        .HasColumnType("int");

                    b.HasKey("pakkettenId", "productenId");

                    b.HasIndex("productenId");

                    b.ToTable("PakketProduct");
                });

            modelBuilder.Entity("Core.Domain.Medewerker", b =>
                {
                    b.HasOne("Core.Domain.Kantine", "kantine")
                        .WithMany()
                        .HasForeignKey("kantineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("kantine");
                });

            modelBuilder.Entity("Core.Domain.Pakket", b =>
                {
                    b.HasOne("Core.Domain.Student", "gereserveerd")
                        .WithMany()
                        .HasForeignKey("gereserveerdId");

                    b.HasOne("Core.Domain.Kantine", "kantine")
                        .WithMany()
                        .HasForeignKey("kantineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("gereserveerd");

                    b.Navigation("kantine");
                });

            modelBuilder.Entity("PakketProduct", b =>
                {
                    b.HasOne("Core.Domain.Pakket", null)
                        .WithMany()
                        .HasForeignKey("pakkettenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Domain.Product", null)
                        .WithMany()
                        .HasForeignKey("productenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
